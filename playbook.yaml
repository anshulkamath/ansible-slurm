# Largely inspired by:
# https://github.com/SergioMEV/slurm-for-dummies?tab=readme-ov-file#step-by-step-overview
- name: Validate sane inventory
  hosts: controller
  tasks:
    - name: Validate inventory
      ansible.builtin.assert:
        that:
          - groups['controller'] | length == 1

- name: Install Munge
  hosts: all
  tasks:
    - name: Install munge dependencies
      become: true
      ansible.builtin.apt:
        pkg:
          - munge
          - libmunge2
          - libmunge-dev

    - name: Generate munge key
      when: inventory_hostname in groups['controller']
      become: true
      ansible.builtin.shell: sudo -u munge mungekey
      register: result
      failed_when:
        - result.rc != 0
        - '"File exists" not in result.stderr'
      
    - name: Fetch munge key
      become: true
      ansible.builtin.fetch:
        src: /etc/munge/munge.key
        dest: /tmp/munge.key
        flat: true
        fail_on_missing: true
      register: fetch_result

    - name: Copy to workers
      when: inventory_hostname in groups['workers']
      become: true
      ansible.builtin.copy:
        src: /tmp/munge.key
        dest: /etc/munge/munge.key
        owner: munge
        group: munge
        mode: '0600'

    - name: Delete successfully fetched files
      file:
        path: "{{ fetch_result.dest }}"
        state: absent

    - name: Restart munge service on all nodes
      become: true
      ansible.builtin.systemd_service:
        name: munge.service
        enabled: true
        state: restarted
      tags: workers, controllers


- name: Install SLURM
  hosts: all
  tasks:
    - name: Install dependencies
      become: true
      ansible.builtin.apt:
        update_cache: true
        pkg:
          - slurm-wlm
          - hostname

    - name: Update `/etc/hosts` with private IPs and group names
      block:
        - name: Generate host entry mapping
          set_fact:
            group_to_private_ips: >-
              {{
                group_to_private_ips | default({}) | combine({ item: hostvars[item]['private_ip'] })
              }}
          loop: "{{ groups['all'] }}"

        - name: Write out /etc/hosts entries
          set_fact:
            host_entries: >-
              {{
                host_entries | default(["# Slurm configs"]) + [item.value + ' ' + item.key]
              }}
          loop: "{{ group_to_private_ips | dict2items}}"

        - name: Append entries to /etc/hosts
          become: true
          lineinfile:
            path: /etc/hosts
            line: "{{ item }}"
            state: present
            create: true
            insertafter: EOF
          loop: "{{ host_entries }}"
          
    - name: Configure all SLURM dependencies
      become: true
      ansible.builtin.file:
        path: "{{ item  }}"
        state: directory
        mode: '0644'
        group: slurm
        owner: slurm
        recurse: true
      loop:
        - /var/run/slurm
        - /var/log/slurm
        - /var/spool/slurm
        - /etc/slurm

    - name: Copy slurm conf to clusters
      become: true
      ansible.builtin.copy:
        src: slurm.conf
        dest: /etc/slurm/slurm.conf
        owner: slurm
        group: slurm
        mode: '0644'

    - name: Restart slurm daemons
      block:
        - name: Restart controller
          become: true
          when: inventory_hostname in groups['controller']
          ansible.builtin.systemd_service:
            name: slurmctld.service
            enabled: true
            state: 'restarted'
          tags: controller, debug

        - name: Restart workers
          become: true
          when: inventory_hostname in groups['workers']
          ansible.builtin.systemd_service:
            name: slurmd.service
            enabled: true
            state: 'restarted'
          tags: workers, debug

